"""initial_migrations

Revision ID: ebfb0becd275
Revises: 5462f0a9a858
Create Date: 2025-06-04 18:45:38.818744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ebfb0becd275'
down_revision: Union[str, None] = '5462f0a9a858'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diabetes_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pregnancies', sa.Integer(), nullable=False),
    sa.Column('glucose', sa.Integer(), nullable=False),
    sa.Column('blood_pressure', sa.Integer(), nullable=False),
    sa.Column('skin_thickness', sa.Integer(), nullable=False),
    sa.Column('insulin', sa.Integer(), nullable=False),
    sa.Column('bmi', sa.Float(), nullable=False),
    sa.Column('diabetes_pedigree', sa.Float(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('outcome', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('idx_transactions_isFlaggedFraud', table_name='transactions')
    op.drop_index('idx_transactions_isFraud', table_name='transactions')
    op.drop_index('idx_transactions_nameDest', table_name='transactions')
    op.drop_index('idx_transactions_nameOrig', table_name='transactions')
    op.drop_index('idx_transactions_step', table_name='transactions')
    op.drop_index('idx_transactions_type', table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('step', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('CASH_IN', 'CASH_OUT', 'DEBIT', 'PAYMENT', 'TRANSFER', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('nameOrig', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('oldbalanceOrg', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('newbalanceOrig', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('nameDest', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('oldbalanceDest', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('newbalanceDest', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('isFraud', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('isFlaggedFraud', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.CheckConstraint('"newbalanceDest" >= 0::numeric', name='check_newbalanceDest_positive'),
    sa.CheckConstraint('"newbalanceOrig" >= 0::numeric', name='check_newbalanceOrig_positive'),
    sa.CheckConstraint('"oldbalanceDest" >= 0::numeric', name='check_oldbalanceDest_positive'),
    sa.CheckConstraint('"oldbalanceOrg" >= 0::numeric', name='check_oldbalanceOrg_positive'),
    sa.CheckConstraint('amount >= 0::numeric', name='check_amount_positive'),
    sa.CheckConstraint('step >= 0', name='check_step_positive'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.create_index('idx_transactions_type', 'transactions', ['type'], unique=False)
    op.create_index('idx_transactions_step', 'transactions', ['step'], unique=False)
    op.create_index('idx_transactions_nameOrig', 'transactions', ['nameOrig'], unique=False)
    op.create_index('idx_transactions_nameDest', 'transactions', ['nameDest'], unique=False)
    op.create_index('idx_transactions_isFraud', 'transactions', ['isFraud'], unique=False)
    op.create_index('idx_transactions_isFlaggedFraud', 'transactions', ['isFlaggedFraud'], unique=False)
    op.drop_table('diabetes_records')
    # ### end Alembic commands ###
